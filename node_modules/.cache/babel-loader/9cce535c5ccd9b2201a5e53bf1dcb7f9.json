{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\"; //este custom hook es para los formularios, creamos un estado de los valores pasados y un metdo q mantiene los\n// valores y modifica el pasado por parametro\n\nexport const useForm = initialState => {\n  _s();\n\n  const [values, setValues] = useState(initialState);\n\n  const handleInputChange = _ref => {\n    let {\n      target\n    } = _ref;\n    //para q cada ves q entremos algo en el input se actualice el value del input\n    setValues({ ...values,\n      [target.name]: target.value\n    });\n  };\n\n  return [values, handleInputChange];\n};\n\n_s(useForm, \"tR5pueiAhaduWSnglIJ8EBw8xeE=\");","map":{"version":3,"names":["useState","useForm","initialState","values","setValues","handleInputChange","target","name","value"],"sources":["/home/erielmejias99/files/project/React/hooks-app/src/hooks/useForm.js"],"sourcesContent":["import {useState} from \"react\";\n\n//este custom hook es para los formularios, creamos un estado de los valores pasados y un metdo q mantiene los\n// valores y modifica el pasado por parametro\nexport const useForm = ( initialState ) => {\n    const [values, setValues] = useState(initialState);\n\n    const handleInputChange = ({target}) => {\n        //para q cada ves q entremos algo en el input se actualice el value del input\n        setValues({\n            ...values,\n            [target.name]: target.value\n        })\n\n    };\n\n    return [values, handleInputChange];\n};\n\n"],"mappings":";;AAAA,SAAQA,QAAR,QAAuB,OAAvB,C,CAEA;AACA;;AACA,OAAO,MAAMC,OAAO,GAAKC,YAAF,IAAoB;EAAA;;EACvC,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAACE,YAAD,CAApC;;EAEA,MAAMG,iBAAiB,GAAG,QAAc;IAAA,IAAb;MAACC;IAAD,CAAa;IACpC;IACAF,SAAS,CAAC,EACN,GAAGD,MADG;MAEN,CAACG,MAAM,CAACC,IAAR,GAAeD,MAAM,CAACE;IAFhB,CAAD,CAAT;EAKH,CAPD;;EASA,OAAO,CAACL,MAAD,EAASE,iBAAT,CAAP;AACH,CAbM;;GAAMJ,O"},"metadata":{},"sourceType":"module"}