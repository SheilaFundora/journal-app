{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\"; //este custom hook es para los formularios, creamos un estado de los valores pasados y un metdo q mantiene los\n// valores y modifica el pasado por parametro\n//antes recogiamos los valores de los form con el luguanje d programacion del backend pero aqui lo estamos haciendo\n// con js con un hook, resivimos el valor y lo ponemos en un useState y lo retornamos con el metodo q hace q se\n// complete toodo lo q escibimos en el input\n\nexport const useForm = initialState => {\n  _s();\n\n  const [values, setValues] = useState(initialState); //metodo q permite limpiar el formulario\n\n  const reset = () => {\n    setValues(initialState);\n  };\n\n  const handleInputChange = _ref => {\n    let {\n      target\n    } = _ref;\n    //metodo que hace q cada vez q escribimos algo en el input actualice el state con lo q tenia y lo q vamos\n    // escribiendo, pues se escribe letra a letra\n    setValues({ ...values,\n      [target.name]: target.value\n    });\n  };\n\n  return [values, handleInputChange, reset];\n};\n\n_s(useForm, \"tR5pueiAhaduWSnglIJ8EBw8xeE=\");","map":{"version":3,"names":["useState","useForm","initialState","values","setValues","reset","handleInputChange","target","name","value"],"sources":["/home/erielmejias99/files/project/React/hooks-app/src/hooks/useForm.js"],"sourcesContent":["import {useState} from \"react\";\n\n//este custom hook es para los formularios, creamos un estado de los valores pasados y un metdo q mantiene los\n// valores y modifica el pasado por parametro\n\n//antes recogiamos los valores de los form con el luguanje d programacion del backend pero aqui lo estamos haciendo\n// con js con un hook, resivimos el valor y lo ponemos en un useState y lo retornamos con el metodo q hace q se\n// complete toodo lo q escibimos en el input\nexport const useForm = ( initialState ) => {\n    const [values, setValues] = useState(initialState);\n\n    //metodo q permite limpiar el formulario\n    const reset = () => {\n        setValues(initialState);\n    }\n\n    const handleInputChange = ({target}) => {\n        //metodo que hace q cada vez q escribimos algo en el input actualice el state con lo q tenia y lo q vamos\n        // escribiendo, pues se escribe letra a letra\n        setValues({\n            ...values,\n            [target.name]: target.value\n        })\n    };\n\n    return [values, handleInputChange, reset];\n};\n\n"],"mappings":";;AAAA,SAAQA,QAAR,QAAuB,OAAvB,C,CAEA;AACA;AAEA;AACA;AACA;;AACA,OAAO,MAAMC,OAAO,GAAKC,YAAF,IAAoB;EAAA;;EACvC,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAACE,YAAD,CAApC,CADuC,CAGvC;;EACA,MAAMG,KAAK,GAAG,MAAM;IAChBD,SAAS,CAACF,YAAD,CAAT;EACH,CAFD;;EAIA,MAAMI,iBAAiB,GAAG,QAAc;IAAA,IAAb;MAACC;IAAD,CAAa;IACpC;IACA;IACAH,SAAS,CAAC,EACN,GAAGD,MADG;MAEN,CAACI,MAAM,CAACC,IAAR,GAAeD,MAAM,CAACE;IAFhB,CAAD,CAAT;EAIH,CAPD;;EASA,OAAO,CAACN,MAAD,EAASG,iBAAT,EAA4BD,KAA5B,CAAP;AACH,CAlBM;;GAAMJ,O"},"metadata":{},"sourceType":"module"}