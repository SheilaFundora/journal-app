{"ast":null,"code":"import _defineProperty from\"/home/erielmejias99/files/project/React/hooks-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"/home/erielmejias99/files/project/React/hooks-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/home/erielmejias99/files/project/React/hooks-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from\"react\";//este custom hook es para los formularios, creamos un estado de los valores pasados y un metdo q mantiene los\n// valores y modifica el pasado por parametro\n//antes recogiamos los valores de los form con el luguanje d programacion del backend pero aqui lo estamos haciendo\n// con js con un hook, resivimos el valor y lo ponemos en un useState y lo retornamos con el metodo q hace q se\n// complete toodo lo q escibimos en el input\nexport var useForm=function useForm(initialState){var _useState=useState(initialState),_useState2=_slicedToArray(_useState,2),values=_useState2[0],setValues=_useState2[1];//metodo q permite limpiar el formulario\nvar reset=function reset(){setValues(initialState);};var handleInputChange=function handleInputChange(_ref){var target=_ref.target;//metodo que hace q cada vez q escribimos algo en el input actualice el state con lo q tenia y lo q vamos\n// escribiendo, pues se escribe letra a letra\nsetValues(_objectSpread(_objectSpread({},values),{},_defineProperty({},target.name,target.value)));};return[values,handleInputChange,reset];};","map":{"version":3,"names":["useState","useForm","initialState","values","setValues","reset","handleInputChange","target","name","value"],"sources":["/home/erielmejias99/files/project/React/hooks-app/src/hooks/useForm.js"],"sourcesContent":["import {useState} from \"react\";\n\n//este custom hook es para los formularios, creamos un estado de los valores pasados y un metdo q mantiene los\n// valores y modifica el pasado por parametro\n\n//antes recogiamos los valores de los form con el luguanje d programacion del backend pero aqui lo estamos haciendo\n// con js con un hook, resivimos el valor y lo ponemos en un useState y lo retornamos con el metodo q hace q se\n// complete toodo lo q escibimos en el input\nexport const useForm = ( initialState ) => {\n    const [values, setValues] = useState(initialState);\n\n    //metodo q permite limpiar el formulario\n    const reset = () => {\n        setValues(initialState);\n    }\n\n    const handleInputChange = ({target}) => {\n        //metodo que hace q cada vez q escribimos algo en el input actualice el state con lo q tenia y lo q vamos\n        // escribiendo, pues se escribe letra a letra\n        setValues({\n            ...values,\n            [target.name]: target.value\n        })\n    };\n\n    return [values, handleInputChange, reset];\n};\n\n"],"mappings":"sZAAA,OAAQA,QAAR,KAAuB,OAAvB,CAEA;AACA;AAEA;AACA;AACA;AACA,MAAO,IAAMC,QAAO,CAAG,QAAVA,QAAU,CAAEC,YAAF,CAAoB,CACvC,cAA4BF,QAAQ,CAACE,YAAD,CAApC,wCAAOC,MAAP,eAAeC,SAAf,eAEA;AACA,GAAMC,MAAK,CAAG,QAARA,MAAQ,EAAM,CAChBD,SAAS,CAACF,YAAD,CAAT,CACH,CAFD,CAIA,GAAMI,kBAAiB,CAAG,QAApBA,kBAAoB,MAAc,IAAZC,OAAY,MAAZA,MAAY,CACpC;AACA;AACAH,SAAS,gCACFD,MADE,wBAEJI,MAAM,CAACC,IAFH,CAEUD,MAAM,CAACE,KAFjB,GAAT,CAIH,CAPD,CASA,MAAO,CAACN,MAAD,CAASG,iBAAT,CAA4BD,KAA5B,CAAP,CACH,CAlBM"},"metadata":{},"sourceType":"module"}